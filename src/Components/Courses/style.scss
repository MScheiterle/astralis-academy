// polynomial equations
$sqrt2: 1.41421356237;
$sqrt3: 1.73205080757;
$sqrt5p2sqrt5: 3.07768353;
$edgeSize: 50px;
$polyWidth: $edgeSize * 2;
$octaHeight: ($sqrt2 + 1) * $edgeSize;
$hexaHeight: $sqrt3 * $edgeSize;
$decaHeight: $sqrt5p2sqrt5 * $edgeSize;

// Display
$borderHover: 10px;
$softWhite: rgba(255, 255, 255, 1);

// Easing
$easeOutExpo: cubic-bezier(0.19, 1, 0.22, 1);
$easeOutQuart: cubic-bezier(0.165, 0.84, 0.44, 1);

$glowSize: 50px;
$glowBrightness: 20px;
$glowColor: rgba(45, 255, 196, 0.55);

$iconColor: $softWhite;

$bgColor: rgb(14, 17, 17);
$dotColor: rgb(65, 74, 76);

$dotSize: 1px;
$dotSpace: 10px;

$progressBarGlowSize: 50px;
$progressBarGlowBrightness: 20px;
$progressBarBackground: radial-gradient(
  circle at center,
  rgb(95, 158, 160),
  rgb(7, 85, 73)
);

baseBackgroundPoly {
  content: "";
  position: absolute;
  clip-path: polygon(25% 5%, 75% 5%, 100% 50%, 75% 95%, 25% 95%, 0% 50%);
  background: $progressBarBackground;
  transform: scale(1);
  transition-property: transform;
  transition-duration: 0.5s;
  transition-timing-function: $easeOutExpo;
  z-index: -1;
}

#starting_point_hex {
  $startingPointSize: 50px;
  position: absolute;
  height: $startingPointSize;
  width: $startingPointSize;
  transform: translate3d(-50%, -50%, 0);
  background: $bgColor;
  -webkit-clip-path: polygon(
    25% 5%,
    75% 5%,
    100% 50%,
    75% 95%,
    25% 95%,
    0% 50%
  );
  clip-path: polygon(25% 5%, 75% 5%, 100% 50%, 75% 95%, 25% 95%, 0% 50%);

  &::after {
    @extend baseBackgroundPoly;
    height: $startingPointSize;
    width: $startingPointSize;
  }
}

.courses {
  width: 100vw;
  min-height: 100vh;
  max-height: 100vh;
  background: linear-gradient(
        90deg,
        $bgColor ($dotSpace - $dotSize),
        transparent 1%
      )
      center,
    linear-gradient($bgColor ($dotSpace - $dotSize), transparent 1%) center,
    $dotColor;
  background-size: $dotSpace $dotSpace;
}

.button {
  z-index: 100;
  position: absolute;

  span {
    font-family: "Varela Round", sans-serif;
    height: 100%;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: all 2s $easeOutExpo;
    font-size: 2rem;
    color: $iconColor;
  }

  .glow {
    display: none;
    position: absolute;
    top: 50%;
    right: 50%;
    -webkit-box-shadow: 0px 0px $glowSize $glowBrightness $glowColor;
    -moz-box-shadow: 0px 0px $glowSize $glowBrightness $glowColor;
    box-shadow: 0px 0px $glowSize $glowBrightness $glowColor;
  }

  &.Hexagon{
    &.done::after {
      @extend baseBackgroundPoly;
      transform: translate3d(0, -93.3%, 0) scale(0.929, 0.9); /* 0.929, 0.9 */
      height: $polyWidth;
      width: $polyWidth;
    }
    &::before {
      @extend baseBackgroundPoly;
      background: $bgColor !important;
      transform: translate3d(0, -6.7%, 0) scale(0.929, 0.9);
      height: $polyWidth;
      width: $polyWidth;
    }
  }

  &.Octagon::after {
    @extend baseBackgroundPoly;
    height: $polyWidth;
    width: $polyWidth;
  }

  & .Decagon::after {
    @extend baseBackgroundPoly;
    height: $polyWidth;
    width: $polyWidth;
  }
}

.button {
  cursor: pointer;
  width: $polyWidth;
  transform: translate3d(-50%, -50%, 0);

  &.Hexagon {
    height: $hexaHeight;
  }

  &.Octagon {
    height: $octaHeight;
  }

  & .Decagon {
    height: $decaHeight;
  }

  &.active {
    .glow {
      animation: glow 7s linear infinite;
      display: block;
    }

    &:hover {
      .polygon:nth-child(4) {
        transition: all 2s $easeOutExpo;
        transform: scale(1.5) rotate(90deg);
      }
      .polygon:nth-child(3) {
        transition: all 2s $easeOutExpo;
        transform: scale(1.4) rotate(60deg);
      }
      .polygon:nth-child(2) {
        transition: all 2s $easeOutExpo;
        transform: scale(1.3) rotate(30deg);
      }
      .polygon:nth-child(1) {
        transition: all 2s $easeOutExpo;
        opacity: 1;

        div:before,
        div:after {
          transition: all 2s $easeOutExpo;
          height: $borderHover;
        }

        transform: scale(1.2);
      }
      span {
        transition: all 2s $easeOutExpo;
        transform: scale(1.2);
      }
    }
  }

  &.done {
    // Hover state
    &:hover {
      .polygon:nth-child(4) {
        transition: all 2s $easeOutExpo;
        transform: scale(1.5);
      }
      .polygon:nth-child(3) {
        transition: all 2s $easeOutExpo;
        transform: scale(1.4);
      }
      .polygon:nth-child(2) {
        transition: all 2s $easeOutExpo;
        transform: scale(1.3);
      }
      .polygon:nth-child(1) {
        transition: all 2s $easeOutExpo;
        opacity: 1;

        div:before,
        div:after {
          transition: all 2s $easeOutExpo;
          height: $borderHover;
        }

        transform: scale(1.2);
      }
      span {
        transition: all 2s $easeOutExpo;
        transform: scale(1.2);
      }
    }
  }

  &.upcoming {
    // Hover state
    &:hover {
      .polygon:nth-child(4) {
        transition: all 2s $easeOutExpo;
        transform: scale(1.1);
      }
      .polygon:nth-child(3) {
        transition: all 2s $easeOutExpo;
        transform: scale(1);
      }
      .polygon:nth-child(2) {
        transition: all 2s $easeOutExpo;
        transform: scale(0.9);
      }
      .polygon:nth-child(1) {
        transition: all 2s $easeOutExpo;
        opacity: 1;

        div:before,
        div:after {
          transition: all 2s $easeOutExpo;
          height: $borderHover;
        }

        transform: scale(0.7);
      }
      span {
        transition: all 2s $easeOutExpo;
        transform: scale(0.7);
      }
    }
  }
}

.polygon {
  position: absolute;
  left: $edgeSize/2;
  width: $edgeSize;
  opacity: 0.5;

  // Inset
  &:nth-child(1) {
    transition: all 2s $easeOutQuart;
    transform: scale(0.9);
    z-index: 96;
  }

  // Outset
  &:nth-child(2) {
    transition: all 2s $easeOutExpo;
    transform: scale(1.1);
    z-index: 97;
  }

  &:nth-child(3) {
    transition: all 2s $easeOutExpo;
    transform: scale(1.2);
    z-index: 98;
  }

  &:nth-child(4) {
    transition: all 2s $easeOutExpo;
    transform: scale(1.3);
    z-index: 99;
  }

  div {
    box-sizing: border-box;
    position: absolute;
    top: 0;
    width: $edgeSize;

    &:before,
    &:after {
      content: "";
      position: absolute;
      background: $softWhite;
      width: 100%;
      height: 1px;
    }
    &:before {
      top: 0;
    }
    &:after {
      bottom: 0;
    }

    transform-origin: center center;
  }
}

.deca {
  @extend .polygon;

  height: $decaHeight;

  div {
    height: $decaHeight;
  }

  div:nth-child(2) {
    transform: rotate(36deg);
  }
  div:nth-child(3) {
    transform: rotate(72deg);
  }
  div:nth-child(4) {
    transform: rotate(-36deg);
  }
  div:nth-child(5) {
    transform: rotate(-72deg);
  }
}

.octa {
  @extend .polygon;

  height: $octaHeight;

  div {
    height: $octaHeight;
  }

  div:nth-child(2) {
    transform: rotate(45deg);
  }
  div:nth-child(3) {
    transform: rotate(90deg);
  }
  div:nth-child(4) {
    transform: rotate(-45deg);
  }
}

.hexa {
  @extend .polygon;

  height: $hexaHeight;

  div {
    height: $hexaHeight;
  }

  div:nth-child(2) {
    transform: rotate(-60deg);
  }
  div:nth-child(3) {
    transform: rotate(60deg);
  }
}

@keyframes glow {
  0% {
    -webkit-box-shadow: 0px 0px $glowSize $glowBrightness
      rgba(45, 255, 196, 0.55);
    -moz-box-shadow: 0px 0px $glowSize $glowBrightness rgba(45, 255, 196, 0.55);
    box-shadow: 0px 0px $glowSize $glowBrightness rgba(45, 255, 196, 0.55);
  }
  50% {
    -webkit-box-shadow: 0px 0px $glowSize + 50 $glowBrightness + 25 $glowColor;
    -moz-box-shadow: 0px 0px $glowSize + 50 $glowBrightness + 25 $glowColor;
    box-shadow: 0px 0px $glowSize + 50 $glowBrightness + 25 $glowColor;
  }
}
